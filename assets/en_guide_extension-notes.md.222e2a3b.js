import{_ as e,c as o,o as i,U as a}from"./chunks/framework.a73c7ff7.js";const m=JSON.parse('{"title":"Extension Notes","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/extension-notes.md","filePath":"en/guide/extension-notes.md"}'),n={name:"en/guide/extension-notes.md"},t=a('<h1 id="extension-notes" tabindex="-1">Extension Notes <a class="header-anchor" href="#extension-notes" aria-label="Permalink to &quot;Extension Notes&quot;">​</a></h1><p>Because it is a static compilation, extensions will not compile 100% perfectly, and different extensions have different requirements for PHP and the environment, which will be listed one by one here.</p><h2 id="phpmicro" tabindex="-1">phpmicro <a class="header-anchor" href="#phpmicro" aria-label="Permalink to &quot;phpmicro&quot;">​</a></h2><ol><li>Only PHP &gt;= 8.0 is supported.</li></ol><h2 id="swoole" tabindex="-1">swoole <a class="header-anchor" href="#swoole" aria-label="Permalink to &quot;swoole&quot;">​</a></h2><ol><li>swoole &gt;= 5.0 Only PHP &gt;= 8.0 is supported.</li><li>swoole Compilation is only supported in Alpine Linux in Linux environments. <a href="https://github.com/crazywhalecc/static-php-cli/issues/51" target="_blank" rel="noreferrer">#51</a></li><li>swoole Currently, curl hooks are not supported (which may be fixed in the future).</li></ol><h2 id="swow" tabindex="-1">swow <a class="header-anchor" href="#swow" aria-label="Permalink to &quot;swow&quot;">​</a></h2><ol><li>Only PHP version &gt;= 8.0 is supported.</li></ol><h2 id="intl" tabindex="-1">intl <a class="header-anchor" href="#intl" aria-label="Permalink to &quot;intl&quot;">​</a></h2><ol><li>intl Due to its dependency: ICU extensions (ICU uses some C++libraries), compilation is only supported in Alpine Linux in Linux environments, similar to Swoole.</li></ol><h2 id="gd" tabindex="-1">gd <a class="header-anchor" href="#gd" aria-label="Permalink to &quot;gd&quot;">​</a></h2><ol><li>gd Extension relies on more additional Graphics library. By default, using <code>bin/spc build gd</code> directly will not support some Graphics library, such as <code>libjpeg</code>, <code>libavif</code>, etc. Currently, it supports four libraries: <code>freetype,libjpeg,libavif,libwebp</code>. Therefore, the following command can be used to introduce them into the gd library:</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">bin/spc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--with-libs=freetype,libjpeg,libavif,libwebp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--build-cli</span></span></code></pre></div><h2 id="mcrypt" tabindex="-1">mcrypt <a class="header-anchor" href="#mcrypt" aria-label="Permalink to &quot;mcrypt&quot;">​</a></h2><ol><li>Currently not supported, and this extension will not be supported in the future. <a href="https://github.com/crazywhalecc/static-php-cli/issues/32" target="_blank" rel="noreferrer">#32</a></li></ol><h2 id="oci8" tabindex="-1">oci8 <a class="header-anchor" href="#oci8" aria-label="Permalink to &quot;oci8&quot;">​</a></h2><ol><li>oci8 is an extension of the Oracle database, because the library on which the extension provided by Oracle does not provide a statically compiled version (<code>.a</code>) or source code, and this extension cannot be compiled into php by static linking, so it cannot be supported.</li></ol><h2 id="sqlsrv" tabindex="-1">sqlsrv <a class="header-anchor" href="#sqlsrv" aria-label="Permalink to &quot;sqlsrv&quot;">​</a></h2><ol><li>sqlsrv is an extension of the SQL Server database. Because the library on which the extension provided by SQL Server does not provide a statically compiled version (<code>a</code>) or source code, the extension cannot be compiled into php by static linking, so it cannot be supported.</li></ol><h2 id="xdebug" tabindex="-1">xdebug <a class="header-anchor" href="#xdebug" aria-label="Permalink to &quot;xdebug&quot;">​</a></h2><ol><li>Xdebug is a Zend extension. The functions of Xdebug depend on PHP&#39;s Zend engine and underlying code. If you want to statically compile it into PHP, you may need a huge amount of patch code, which is not possible.</li><li>The macOS platform can compile an xdebug extension under PHP compiled on the same platform, extract the <code>xdebug.so</code> file, and then use the <code>--no-strip</code> parameter in static-php-cli to retain the debug symbol table and add the <code>ffi</code> extension. The compiled <code>./php</code> binary can be configured and run by specifying the INI, eg <code>./php -d &#39;zend_extension=/path/to/xdebug.so&#39; your-code.php</code>.</li></ol><h2 id="glfw" tabindex="-1">glfw <a class="header-anchor" href="#glfw" aria-label="Permalink to &quot;glfw&quot;">​</a></h2><ol><li>glfw depends on OpenGL, and linux environment also needs X11, which cannot be linked statically.</li><li>macOS platform, we can compile and link system builtin OpenGL and related libraries dynamically.</li></ol>',23),l=[t];function s(r,c,d,p,h,u){return i(),o("div",null,l)}const f=e(n,[["render",s]]);export{m as __pageData,f as default};
