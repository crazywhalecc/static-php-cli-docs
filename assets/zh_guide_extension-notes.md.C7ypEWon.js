import{_ as o,c as e,o as l,U as a}from"./chunks/framework.GQ61FypF.js";const g=JSON.parse('{"title":"扩展注意事项","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/extension-notes.md","filePath":"zh/guide/extension-notes.md"}'),i={name:"zh/guide/extension-notes.md"},s=a('<h1 id="扩展注意事项" tabindex="-1">扩展注意事项 <a class="header-anchor" href="#扩展注意事项" aria-label="Permalink to &quot;扩展注意事项&quot;">​</a></h1><p>因为是静态编译，扩展不会 100% 完美编译，而且不同扩展对 PHP、环境都有不同的要求，这里将一一列举。</p><h2 id="phpmicro" tabindex="-1">phpmicro <a class="header-anchor" href="#phpmicro" aria-label="Permalink to &quot;phpmicro&quot;">​</a></h2><ol><li>phpmicro SAPI 仅支持 PHP &gt;= 8.0 版本。</li></ol><h2 id="swoole" tabindex="-1">swoole <a class="header-anchor" href="#swoole" aria-label="Permalink to &quot;swoole&quot;">​</a></h2><ol><li>swoole &gt;= 5.0 版本仅支持 PHP &gt;= 8.0 版本。</li><li>swoole 目前不支持 PHP 8.0 版本 curl 的 hook（后续有可能会修复）。</li><li>编译时只包含 <code>swoole</code> 扩展时不会完整开启支持的 Swoole 数据库协程 hook，如需使用请加入对应的 <code>swoole-hook-xxx</code> 扩展。</li><li>swoole 在部分扩展组合下可能出现 <code>zend_mm_heap corrupted</code> 问题，暂未找到是什么原因导致的。</li></ol><h2 id="swoole-hook-pgsql" tabindex="-1">swoole-hook-pgsql <a class="header-anchor" href="#swoole-hook-pgsql" aria-label="Permalink to &quot;swoole-hook-pgsql&quot;">​</a></h2><p>swoole-hook-pgsql 不是一个扩展，而是 Swoole 的 Hook 特性。 如果你在编译时添加了 <code>swoole,swoole-hook-pgsql</code>，你将启用 Swoole 的 PostgreSQL 客户端和 <code>pdo_pgsql</code> 扩展的协程模式。</p><p>swoole-hook-pgsql 与 <code>pdo_pgsql</code> 扩展冲突。如需使用 Swoole 和 <code>pdo_pgsql</code>，请删除 pdo_pgsql 扩展，启用 <code>swoole</code> 和 <code>swoole-hook-pgsql</code> 即可。 该扩展包含了 <code>pdo_pgsql</code> 的协程环境的实现。</p><p>在 macOS 系统，<code>pdo_pgsql</code> 可能无法正常连接到 postgresql 服务器，请谨慎使用。</p><h2 id="swoole-hook-mysql" tabindex="-1">swoole-hook-mysql <a class="header-anchor" href="#swoole-hook-mysql" aria-label="Permalink to &quot;swoole-hook-mysql&quot;">​</a></h2><p>swoole-hook-mysql 不是一个扩展，而是 Swoole 的 Hook 特性。 如果你在编译时添加了 <code>swoole,swoole-hook-mysql</code>，你将启用 Swoole 的 <code>mysqlnd</code> 和 <code>pdo_mysql</code> 的协程模式。</p><h2 id="swoole-hook-sqlite" tabindex="-1">swoole-hook-sqlite <a class="header-anchor" href="#swoole-hook-sqlite" aria-label="Permalink to &quot;swoole-hook-sqlite&quot;">​</a></h2><p>swoole-hook-sqlite 不是一个扩展，而是 Swoole 的 Hook 特性。 如果你在编译时添加了 <code>swoole,swoole-hook-sqlite</code>，你将启用 Swoole 的 <code>pdo_sqlite</code> 的协程模式（Swoole 必须为 5.1 以上）。</p><p>swoole-hook-sqlite 与 <code>pdo_sqlite</code> 扩展冲突。如需使用 Swoole 和 <code>pdo_sqlite</code>，请删除 pdo_sqlite 扩展，启用 <code>swoole</code> 和 <code>swoole-hook-sqlite</code> 即可。 该扩展包含了 <code>pdo_sqlite</code> 的协程环境的实现。</p><h2 id="swow" tabindex="-1">swow <a class="header-anchor" href="#swow" aria-label="Permalink to &quot;swow&quot;">​</a></h2><ol><li>swow 仅支持 PHP &gt;= 8.0 版本。</li></ol><h2 id="imap" tabindex="-1">imap <a class="header-anchor" href="#imap" aria-label="Permalink to &quot;imap&quot;">​</a></h2><ol><li>该扩展目前不支持 Kerberos。</li><li>由于底层的 c-client、ext-imap 不是线程安全的。 无法在 <code>--enable-zts</code> 构建中使用它。</li><li>由于该扩展可能会从未来的 PHP 中删除，因此我们建议您寻找替代实现，例如 <a href="https://github.com/Webklex/php-imap" target="_blank" rel="noreferrer">Webklex/php-imap</a>。</li></ol><h2 id="gd" tabindex="-1">gd <a class="header-anchor" href="#gd" aria-label="Permalink to &quot;gd&quot;">​</a></h2><ol><li>gd 扩展依赖了较多的额外图形库，默认情况下，直接使用 <code>bin/spc build gd</code> 不会引入和支持部分图形库，例如 <code>libjpeg</code>、<code>libavif</code> 等， 需要使用 <code>--with-libs</code> 参数补全。目前支持 <code>freetype,libjpeg,libavif,libwebp</code> 四个库的支持，所以这里可以使用以下命令来让 gd 库引入它们：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/spc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-libs=freetype,libjpeg,libavif,libwebp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build-cli</span></span></code></pre></div><h2 id="mcrypt" tabindex="-1">mcrypt <a class="header-anchor" href="#mcrypt" aria-label="Permalink to &quot;mcrypt&quot;">​</a></h2><ol><li>目前未支持，未来也不计划支持此扩展。<a href="https://github.com/crazywhalecc/static-php-cli/issues/32" target="_blank" rel="noreferrer">#32</a></li></ol><h2 id="oci8" tabindex="-1">oci8 <a class="header-anchor" href="#oci8" aria-label="Permalink to &quot;oci8&quot;">​</a></h2><ol><li>oci8 是 Oracle 数据库的扩展，因为 Oracle 提供的扩展所依赖的库未提供静态编译版本（<code>.a</code>）或源代码，无法使用静态链接的方式将此扩展编译到 php 内，故无法支持。</li></ol><h2 id="xdebug" tabindex="-1">xdebug <a class="header-anchor" href="#xdebug" aria-label="Permalink to &quot;xdebug&quot;">​</a></h2><ol><li>Xdebug 是一个 Zend 扩展，Xdebug 的功能依赖于 PHP 的 Zend 引擎和底层代码，如果要将其静态编译到 PHP 中，可能需要巨量的 patch 代码，这是不可行的。</li><li>macOS 平台可以通过在相同平台编译的 PHP 下编译一个 xdebug 扩展，并提取其中的 <code>xdebug.so</code> 文件，再在 static-php-cli 中使用 <code>--no-strip</code> 参数保留调试符号表，同时加入 <code>ffi</code> 扩展。 编译的 <code>./php</code> 二进制可以通过指定 INI 配置并运行，例如<code>./php -d &#39;zend_extension=xdebug.so&#39; your-code.php</code>。</li></ol><h2 id="xml" tabindex="-1">xml <a class="header-anchor" href="#xml" aria-label="Permalink to &quot;xml&quot;">​</a></h2><ol><li>xml包括 xmlreader、xmlwriter、dom、simplexml 等，添加 xml 扩展时最好同时启用这些扩展。</li><li>libxml 包含在 xml 扩展中。 启用 xml 相当于启用 libxml。</li></ol><h2 id="glfw" tabindex="-1">glfw <a class="header-anchor" href="#glfw" aria-label="Permalink to &quot;glfw&quot;">​</a></h2><ol><li>glfw 扩展依赖 OpenGL，在 Linux 平台还依赖 X11 等环境，这些库都无法被轻易地动态链接。</li><li>在 macOS 系统下，我们可以动态链接系统的 OpenGL 和一些相关的库。</li></ol><h2 id="rar" tabindex="-1">rar <a class="header-anchor" href="#rar" aria-label="Permalink to &quot;rar&quot;">​</a></h2><ol><li>rar 扩展目前在 macOS x86_64 环境下与 <code>common</code> 扩展集合编译 phpmicro 存在问题。</li></ol><h2 id="mongodb" tabindex="-1">mongodb <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;mongodb&quot;">​</a></h2><ol><li>mongodb暂时不支持macOS因为驱动存在一些问题。在 <a href="https://github.com/crazywhalecc/static-php-cli/issues/281" target="_blank" rel="noreferrer">此处</a> 跟踪进度。</li></ol><h2 id="pgsql" tabindex="-1">pgsql <a class="header-anchor" href="#pgsql" aria-label="Permalink to &quot;pgsql&quot;">​</a></h2><p><s>pgsql ssl 连接与 openssl 3.2.0 不兼容。相关链接：</s></p><ul><li>~~<a href="https://github.com/Homebrew/homebrew-core/issues/155651~~" target="_blank" rel="noreferrer">https://github.com/Homebrew/homebrew-core/issues/155651~~</a></li><li>~~<a href="https://github.com/Homebrew/homebrew-core/pull/155699~~" target="_blank" rel="noreferrer">https://github.com/Homebrew/homebrew-core/pull/155699~~</a></li><li>~~<a href="https://github.com/postgres/postgres/commit/c82207a548db47623a2bfa2447babdaa630302b9~~" target="_blank" rel="noreferrer">https://github.com/postgres/postgres/commit/c82207a548db47623a2bfa2447babdaa630302b9~~</a></li></ul><p>pgsql 16.2 修复了这个 Bug，现在正常工作了。</p><h2 id="password-argon2" tabindex="-1">password-argon2 <a class="header-anchor" href="#password-argon2" aria-label="Permalink to &quot;password-argon2&quot;">​</a></h2><ol><li>password-argon2不是一个标准的扩展，它是 <code>password_hash</code> 函数的额外算法。</li><li>在Linux系统，password-argon2 的依赖库 <code>libargon2</code> 与 <code>libsodium</code> 库冲突。</li></ol><h2 id="ffi" tabindex="-1">ffi <a class="header-anchor" href="#ffi" aria-label="Permalink to &quot;ffi&quot;">​</a></h2><ol><li>因为 Linux 系统的限制，虽然可以成功编译 ffi 扩展，但无法使用它加载其他 <code>so</code> 扩展。Linux 支持加载 so 扩展的前提是非静态编译，但动态编译和本项目的目的冲突。</li><li>macOS 支持 ffi 扩展，但是部分内核下不包含调试符号时会出现错误。</li><li>Windows 支持 ffi 扩展。</li></ol><h2 id="xhprof" tabindex="-1">xhprof <a class="header-anchor" href="#xhprof" aria-label="Permalink to &quot;xhprof&quot;">​</a></h2><p>xhprof 扩展包含三部分：<code>xhprof_extension</code>、<code>xhprof_html</code>、<code>xhprof_libs</code>。编译的二进制中只包含 <code>xhprof_extension</code>。 如果需要使用 xhprof，请到 <a href="http://pecl.php.net/package/xhprof" target="_blank" rel="noreferrer">pecl.php.net/package/xhprof</a> 下载源码，指定 <code>xhprof_libs</code> 和 <code>xhprof_html</code> 路径来使用。</p><h2 id="event" tabindex="-1">event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;event&quot;">​</a></h2><p>event 扩展在 macOS 系统下编译后暂无法使用 <code>openpty</code> 特性。相关 Issue：</p><ul><li><a href="https://github.com/crazywhalecc/static-php-cli/issues/335" target="_blank" rel="noreferrer">static-php-cli#335</a></li></ul>',49),r=[s];function t(d,h,c,p,n,b){return l(),e("div",null,r)}const u=o(i,[["render",t]]);export{g as __pageData,u as default};
